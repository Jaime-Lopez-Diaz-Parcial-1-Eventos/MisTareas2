@startuml

abstract class Activity
interface TaskActionListener
interface DatabaseHelper

TaskActionListener <|-- TaskAdapter
Activity <|-- MainActivity
Activity <|-- SettingsActivity
DatabaseHelper <|-- SQLiteHelper

class MainActivity {
    - firebaseDB : FirebaseFirestore
    - sqliteHelper : SQLiteHelper
    - taskDao : TaskDao
    - taskList : List<Task>
    - taskAdapter : TaskAdapter
    - showingPendingTasks : boolean
    - etNewTask : EditText
    - btnAddTask : Button
    - btnPendingTasks : Button
    - btnCompletedTasks : Button
    - btnSettings : Button
    - taskListView : ListView
    - drawerLayout : DrawerLayout
    - toolbar : Toolbar
    + onCreate(Bundle) : void
    - loadThemePreference() : void
    - setAppTheme(boolean) : void
    - addNewTask() : void
    - loadTasks() : void
    - deleteTask(Task) : void
    - markTaskAsDone(Task) : void
    + onBackPressed() : void
}

class SettingsActivity {
    - PREFS_NAME : String
    - KEY_DARK_MODE : String
    - KEY_LANGUAGE : String
    - switchDarkMode : Switch
    - switchLanguage : Switch
    + onCreate(Bundle) : void
    - loadThemePreference() : void
    - setAppTheme(boolean) : void
    - setAppLanguage(String) : void
}

class TaskAdapter {
    - listener : TaskActionListener
    + TaskAdapter(Context, List<Task>, TaskActionListener)
    + getView(int, View, ViewGroup) : View
}

class SQLiteHelper {
    + getInstance(Context) : SQLiteHelper
    + taskDao() : TaskDao
}

class TaskDao {
    + addTask(Task) : void
    + getTasks(boolean) : List<Task>
    + deleteTask(Task) : void
    + updateTask(Task) : void
}

class Task {
    - id : String
    - description : String
    - completed : boolean
    + getId() : String
    + getDescription() : String
    + isCompleted() : boolean
    + setId(String) : void
    + setDescription(String) : void
    + setCompleted(boolean) : void
}

TaskAdapter -[HIDDEN]--> Task

@enduml
